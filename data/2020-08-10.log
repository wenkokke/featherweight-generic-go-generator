Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts1() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffcdb7e3e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcdb7e3e4f, 0xf5, 0x7f6a933faf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffcdb7e3e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts1() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffdb775be4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdb775be4f, 0xf5, 0x4abd01, 0x4aa319)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffdb775be4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts1() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdfa9cce4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdfa9cce4f, 0xf5, 0x7f444fc88f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdfa9cce4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts0() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe42860e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe42860e4f, 0xf5, 0x7fe601a63f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe42860e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff350bee4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff350bee4f, 0xf5, 0x7f925c3e8f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff350bee4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e66a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001cc960, 0x1, 0x1, 0xc0002276d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e66d6, 0x4, 0xc0001e66d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e6676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002276d0, 0x5, 0x5, 0x691120, 0xc00022a640, 0x0, 0x0, 0xc000232000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c60, 0x7ffca7a74e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffca7a74e4f, 0xf5, 0x7f65bb34df01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7ffca7a74e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts1() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff40202e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff40202e4f, 0xf5, 0x7f2cdba06f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff40202e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts1() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae760, 0x3, 0x884590, 0x0, 0x0, 0xc00019c970, 0x1, 0x1, 0xc0001f7720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae796, 0x4, 0xc0001ae790, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f7720, 0x5, 0x5, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffdeb922e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdeb922e4f, 0xf5, 0x7f1b30e0bf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdeb922e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts1() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe39764e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe39764e4f, 0xf5, 0x7f2ea3edbf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe39764e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts0() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff01bdae4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff01bdae4f, 0xf5, 0x7f0ff9aa3f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff01bdae4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffcbb16ce4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcbb16ce4f, 0xf5, 0x7f7bccf27f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffcbb16ce4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ti0(type ) interface {  }; type ts2(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ti0(type ) interface {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd9ce53e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd9ce53e4f, 0xf5, 0x7f93e224df01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd9ce53e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; type ti0(type ) interface {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
type ti0(type ) interface {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd39101e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd39101e4f, 0xf5, 0x7f4ab955bf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd39101e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc000210640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffc7ee99e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc7ee99e4f, 0xf5, 0x7f85ffe00f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc7ee99e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffdbd4bfe4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdbd4bfe4f, 0xf5, 0x7fc541e04f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffdbd4bfe4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc00022a600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffedff7fe4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffedff7fe4f, 0xf5, 0x7f20dc5b9f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffedff7fe4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fffa94f1e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffa94f1e4f, 0xf5, 0x7f5788996f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fffa94f1e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae760, 0x3, 0x884590, 0x0, 0x0, 0xc00019c970, 0x1, 0x1, 0xc0001f7720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae796, 0x4, 0xc0001ae790, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f7720, 0x5, 0x5, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7fff0faeae4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff0faeae4f, 0xf5, 0x7f49513dcf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff0faeae4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffcdb016e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcdb016e4f, 0xf5, 0x7f700b602f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffcdb016e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff44c3be4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff44c3be4f, 0xf5, 0x7f3ee6fe2f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff44c3be4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; type ti0(type ) interface {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
type ti0(type ) interface {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc00022a600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffe33b1be4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe33b1be4f, 0xf5, 0x7f1d7bcb0f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffe33b1be4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe42d88e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe42d88e4f, 0xf5, 0x7f4a4bf62f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe42d88e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e66a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001cc960, 0x1, 0x1, 0xc0002276d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e66d6, 0x4, 0xc0001e66d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e6676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002276d0, 0x5, 0x5, 0x691120, 0xc00022a640, 0x0, 0x0, 0xc000232000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c60, 0x7fff34280e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff34280e4f, 0xf5, 0x7f28548bff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7fff34280e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffc4ce53e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc4ce53e4f, 0xf5, 0x7ffbb9f5df01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffc4ce53e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001fa690, 0x3, 0x884590, 0x0, 0x0, 0xc0001e87c0, 0x1, 0x1, 0xc00023b6d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001fa6c6, 0x4, 0xc0001fa6c0, 0x3, 0x884590, 0x0, 0x0, 0xc0001fa666, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023b6d0, 0x5, 0x5, 0x691120, 0xc00023e600, 0x0, 0x0, 0xc000248000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00019dc40, 0x7ffc83cc5e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc83cc5e4f, 0xf5, 0x7f192e0c8f01, 0xc000124a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffc83cc5e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd09c7ae4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd09c7ae4f, 0xf5, 0x7f6efb9eef01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd09c7ae4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffcc9d86e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcc9d86e4f, 0xf5, 0x7f15a1502f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffcc9d86e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe51a9de4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe51a9de4f, 0xf5, 0x7f71890eaf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe51a9de4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdd5254e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdd5254e4f, 0xf5, 0x7fba0d2aef01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdd5254e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae760, 0x3, 0x884590, 0x0, 0x0, 0xc00019c970, 0x1, 0x1, 0xc0001f7720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae796, 0x4, 0xc0001ae790, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f7720, 0x5, 0x5, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7fffddd55e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffddd55e4f, 0xf5, 0x7f5e3e6eff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fffddd55e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc00020c600, 0x3, 0x884590, 0x0, 0x0, 0xc0001f2730, 0x1, 0x1, 0xc00023d680, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc00020c636, 0x4, 0xc00020c630, 0x3, 0x884590, 0x0, 0x0, 0xc00020c5d6, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023d680, 0x5, 0x5, 0x691120, 0xc0002425c0, 0x0, 0x0, 0xc00024a000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc0001a3c40, 0x7ffe6953de4f, 0xf5, 0x7f923851ff01, 0xc0001228c0, 0x413bc8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe6953de4f, 0xf5, 0x7f923851ff01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000150000, 0x7ffe6953de4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdfc149e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdfc149e4f, 0xf5, 0x7f805d5f9f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdfc149e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd9bfcfe4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd9bfcfe4f, 0xf5, 0x7f6c7d0e8f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd9bfcfe4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001fa690, 0x3, 0x884590, 0x0, 0x0, 0xc0001e87c0, 0x1, 0x1, 0xc00023b6d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001fa6c6, 0x4, 0xc0001fa6c0, 0x3, 0x884590, 0x0, 0x0, 0xc0001fa666, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023b6d0, 0x5, 0x5, 0x691120, 0xc00023e600, 0x0, 0x0, 0xc000248000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00019dc40, 0x7fff886bde4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff886bde4f, 0xf5, 0x7f781a224f01, 0xc000124a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff886bde4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffcad930e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcad930e4f, 0xf5, 0x7fab83c6ef01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffcad930e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe94cb9e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe94cb9e4f, 0xf5, 0x7fbba6bc9f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe94cb9e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ac726, 0x3, 0x884590, 0x0, 0x0, 0xc00019a930, 0x1, 0x1, 0xc0001f84c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ac780, 0x4, 0xc0001ac756, 0x3, 0x884590, 0x0, 0x0, 0xc0001ac720, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f84c0, 0x4, 0x4, 0x691120, 0xc0001f8480, 0x0, 0x0, 0xc0001fe000, 0xce)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7fff71ba0e6c, 0xd8, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff71ba0e6c, 0xd8, 0x7fc63874ff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff71ba0e6c, 0xd8, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c0726, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae930, 0x1, 0x1, 0xc00020c4c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c0780, 0x4, 0xc0001c0756, 0x3, 0x884590, 0x0, 0x0, 0xc0001c0720, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020c4c0, 0x4, 0x4, 0x691120, 0xc00020c480, 0x0, 0x0, 0xc000210000, 0xce)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe6f1c9e6c, 0xd8, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe6f1c9e6c, 0xd8, 0x7fd0f80eff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe6f1c9e6c, 0xd8, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type a0 ti0())(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type a0 ti0())(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46c6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca980, 0x1, 0x1, 0xc00022a580, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e4720, 0x4, 0xc0001e46f6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e46c0, 0x2, 0xc00021ee00, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00022a580, 0x4, 0x4, 0x691120, 0xc00022a540, 0x0, 0x0, 0xc000230000, 0xd6)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffee11a1e64, 0xe0, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffee11a1e64, 0xe0, 0x7f41a5e07f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffee11a1e64, 0xe0, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type a0 ti0())(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type a0 ti0())(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e66c6, 0x3, 0x884590, 0x0, 0x0, 0xc0001cc980, 0x1, 0x1, 0xc00022c5c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e6720, 0x4, 0xc0001e66f6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e66c0, 0x2, 0xc000220e00, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00022c5c0, 0x4, 0x4, 0x691120, 0xc00022c580, 0x0, 0x0, 0xc000232000, 0xd6)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c60, 0x7ffd531d6e64, 0xe0, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd531d6e64, 0xe0, 0x7f3c3a3adf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7ffd531d6e64, 0xe0, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae776, 0x3, 0x884590, 0x0, 0x0, 0xc00019c980, 0x1, 0x1, 0xc0001fc680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae7d0, 0x4, 0xc0001ae7a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001fc680, 0x4, 0x4, 0x691120, 0xc0001fc640, 0x0, 0x0, 0xc000200000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffea898ae62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffea898ae62, 0xe2, 0x7fd3ff978f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000100000, 0x7ffea898ae62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc000228640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e4710, 0x4, 0xc0001e46e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e46b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000228640, 0x4, 0x4, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7fff4ed07e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff4ed07e62, 0xe2, 0x7fc877407f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff4ed07e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae776, 0x3, 0x884590, 0x0, 0x0, 0xc00019c980, 0x1, 0x1, 0xc0001fa680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae7d0, 0x4, 0xc0001ae7a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001fa680, 0x4, 0x4, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffe78a9ee62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe78a9ee62, 0xe2, 0x7f0d070fff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe78a9ee62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001fa6a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e87d0, 0x1, 0x1, 0xc00023e640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001fa700, 0x4, 0xc0001fa6d6, 0x3, 0x884590, 0x0, 0x0, 0xc0001fa6a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023e640, 0x4, 0x4, 0x691120, 0xc00023e600, 0x0, 0x0, 0xc000248000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00019dc40, 0x7ffca6f27e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffca6f27e62, 0xe2, 0x7f94bffe6f01, 0xc000124a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffca6f27e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f66a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e67d0, 0x1, 0x1, 0xc00023a680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f6700, 0x4, 0xc0001f66d6, 0x3, 0x884590, 0x0, 0x0, 0xc0001f66a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023a680, 0x4, 0x4, 0x691120, 0xc00023a640, 0x0, 0x0, 0xc000244000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00019bc60, 0x7ffe0888ee62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe0888ee62, 0xe2, 0x7f90ab64af01, 0xc000128a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000110000, 0x7ffe0888ee62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae776, 0x3, 0x884590, 0x0, 0x0, 0xc00019c980, 0x1, 0x1, 0xc0001fa680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae7d0, 0x4, 0xc0001ae7a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001fa680, 0x4, 0x4, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffcfffe0e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcfffe0e62, 0xe2, 0x7fb3806e3f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffcfffe0e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001d6766, 0x3, 0x884590, 0x0, 0x0, 0xc0001ce7e0, 0x1, 0x1, 0xc000222680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001d67c0, 0x4, 0xc0001d6796, 0x3, 0x884590, 0x0, 0x0, 0xc0001d6760, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000222680, 0x4, 0x4, 0x691120, 0xc000222640, 0x0, 0x0, 0xc000228000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000185c80, 0x7ffee58d5e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffee58d5e62, 0xe2, 0x7f40a2229f01, 0xc000124a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffee58d5e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e66b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001cc970, 0x1, 0x1, 0xc00022a680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e6710, 0x4, 0xc0001e66e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e66b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00022a680, 0x4, 0x4, 0x691120, 0xc00022a640, 0x0, 0x0, 0xc000232000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c60, 0x7ffda8d1ee62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffda8d1ee62, 0xe2, 0x7f0433cd9f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7ffda8d1ee62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ec6b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001d2970, 0x1, 0x1, 0xc000230640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ec710, 0x4, 0xc0001ec6e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ec6b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000230640, 0x4, 0x4, 0x691120, 0xc000230600, 0x0, 0x0, 0xc000238000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000199c60, 0x7ffd8f5cfe62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd8f5cfe62, 0xe2, 0x7fa738c14f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7ffd8f5cfe62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffc21ec6e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc21ec6e62, 0xe2, 0x7fb282953f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc21ec6e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe5ef58e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe5ef58e62, 0xe2, 0x7ff7cbaaef01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe5ef58e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd93b72e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd93b72e62, 0xe2, 0x7f9ac8a2cf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd93b72e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd25acfe4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd25acfe4f, 0xf5, 0x7f8cb3e77f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd25acfe4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe368dde4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe368dde4f, 0xf5, 0x7fbf36cdaf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe368dde4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdac530e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdac530e4f, 0xf5, 0x7f1f25a34f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdac530e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffddb9fbe4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffddb9fbe4f, 0xf5, 0x7f870b4c1f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffddb9fbe4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe36d1ae4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe36d1ae4f, 0xf5, 0x7f2a14676f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe36d1ae4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ti0(type ) interface {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ti0(type ) interface {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd8b8c5e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd8b8c5e4f, 0xf5, 0x7fabf0e8cf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd8b8c5e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; type ti0(type ) interface {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
type ti0(type ) interface {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001fc676, 0x3, 0x884590, 0x0, 0x0, 0xc0001f2730, 0x1, 0x1, 0xc00023d680, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001fc6d0, 0x4, 0xc0001fc6a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001fc670, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023d680, 0x5, 0x5, 0x691120, 0xc0002425c0, 0x0, 0x0, 0xc00024a000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc0001a3c40, 0x7ffe40fcde4f, 0xf5, 0x7f2d27631f01, 0xc0001228c0, 0x413bc8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe40fcde4f, 0xf5, 0x7f2d27631f01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000150000, 0x7ffe40fcde4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; type ti0(type ) interface {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
type ti0(type ) interface {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f0690, 0x3, 0x884590, 0x0, 0x0, 0xc0001de7c0, 0x1, 0x1, 0xc0002316d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f06c6, 0x4, 0xc0001f06c0, 0x3, 0x884590, 0x0, 0x0, 0xc0001f0666, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002316d0, 0x5, 0x5, 0x691120, 0xc000236600, 0x0, 0x0, 0xc00023e000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c40, 0x7ffd8f2cbe4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd8f2cbe4f, 0xf5, 0x7f6bacc20f01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffd8f2cbe4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff3eac2e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff3eac2e4f, 0xf5, 0x7f418280bf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff3eac2e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae760, 0x3, 0x884590, 0x0, 0x0, 0xc00019c970, 0x1, 0x1, 0xc0001f7720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae796, 0x4, 0xc0001ae790, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f7720, 0x5, 0x5, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7fffdc4bce4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffdc4bce4f, 0xf5, 0x7fec85b87f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fffdc4bce4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff08700e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff08700e4f, 0xf5, 0x7fa71fa21f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff08700e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff46f66e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff46f66e4f, 0xf5, 0x7f8feb910f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff46f66e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c0726, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae930, 0x1, 0x1, 0xc00020c4c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c0780, 0x4, 0xc0001c0756, 0x3, 0x884590, 0x0, 0x0, 0xc0001c0720, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020c4c0, 0x4, 0x4, 0x691120, 0xc00020c480, 0x0, 0x0, 0xc000212000, 0xce)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff1c753e6c, 0xd8, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff1c753e6c, 0xd8, 0x7fc21880bf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff1c753e6c, 0xd8, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ac726, 0x3, 0x884590, 0x0, 0x0, 0xc00019a930, 0x1, 0x1, 0xc0001f84c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ac780, 0x4, 0xc0001ac756, 0x3, 0x884590, 0x0, 0x0, 0xc0001ac720, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f84c0, 0x4, 0x4, 0x691120, 0xc0001f8480, 0x0, 0x0, 0xc0001fe000, 0xce)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7fff85d55e6c, 0xd8, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff85d55e6c, 0xd8, 0x7f307d6dbf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff85d55e6c, 0xd8, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type a0 ti0())(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type a0 ti0())(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c0786, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae990, 0x1, 0x1, 0xc00020c5c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c07e0, 0x4, 0xc0001c07b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c0780, 0x2, 0xc000202e40, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020c5c0, 0x4, 0x4, 0x691120, 0xc00020c580, 0x0, 0x0, 0xc000212000, 0xd6)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffc84799e64, 0xe0, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc84799e64, 0xe0, 0x7fadabd39f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc84799e64, 0xe0, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type a0 ti0())(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type a0 ti0())(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c0786, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae990, 0x1, 0x1, 0xc00020c5c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c07e0, 0x4, 0xc0001c07b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c0780, 0x2, 0xc000202e40, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020c5c0, 0x4, 0x4, 0x691120, 0xc00020c580, 0x0, 0x0, 0xc000212000, 0xd6)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdfaba6e64, 0xe0, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdfaba6e64, 0xe0, 0x7fe5a7553f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdfaba6e64, 0xe0, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc00022a640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e4710, 0x4, 0xc0001e46e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e46b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00022a640, 0x4, 0x4, 0x691120, 0xc00022a600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffc64515e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc64515e62, 0xe2, 0x7f483d3aff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffc64515e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff70658e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff70658e62, 0xe2, 0x7f6858439f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff70658e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f06a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001de7d0, 0x1, 0x1, 0xc000234640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f0700, 0x4, 0xc0001f06d6, 0x3, 0x884590, 0x0, 0x0, 0xc0001f06a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000234640, 0x4, 0x4, 0x691120, 0xc000234600, 0x0, 0x0, 0xc00023e000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c40, 0x7ffdfca9ee62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdfca9ee62, 0xe2, 0x7f7e5af0bf01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffdfca9ee62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd587c0e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd587c0e62, 0xe2, 0x7fc04ec00f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd587c0e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f06a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001de7d0, 0x1, 0x1, 0xc000234640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f0700, 0x4, 0xc0001f06d6, 0x3, 0x884590, 0x0, 0x0, 0xc0001f06a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000234640, 0x4, 0x4, 0x691120, 0xc000234600, 0x0, 0x0, 0xc00023e000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c40, 0x7fffb279fe62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffb279fe62, 0xe2, 0x7f89ab4f7f01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fffb279fe62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts1(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts1(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f06a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001de7d0, 0x1, 0x1, 0xc000234640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f0700, 0x4, 0xc0001f06d6, 0x3, 0x884590, 0x0, 0x0, 0xc0001f06a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000234640, 0x4, 0x4, 0x691120, 0xc000234600, 0x0, 0x0, 0xc00023e000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c40, 0x7ffd574e1e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd574e1e62, 0xe2, 0x40c301, 0xc000122a00)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffd574e1e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ca776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b8980, 0x1, 0x1, 0xc000216640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ca7d0, 0x4, 0xc0001ca7a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000216640, 0x4, 0x4, 0x691120, 0xc000216600, 0x0, 0x0, 0xc00021c000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00017fc80, 0x7fffbf649e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffbf649e62, 0xe2, 0x7f669bdb6f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fffbf649e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc00022a640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e4710, 0x4, 0xc0001e46e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e46b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00022a640, 0x4, 0x4, 0x691120, 0xc00022a600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7fff79adbe62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff79adbe62, 0xe2, 0x7f09f03b9f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff79adbe62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ec6a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001da7d0, 0x1, 0x1, 0xc000230640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ec700, 0x4, 0xc0001ec6d6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ec6a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000230640, 0x4, 0x4, 0x691120, 0xc000230600, 0x0, 0x0, 0xc00023a000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c40, 0x7ffd7fce4e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd7fce4e62, 0xe2, 0x7f1e1ebbdf01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffd7fce4e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f06a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001de7d0, 0x1, 0x1, 0xc000236640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f0700, 0x4, 0xc0001f06d6, 0x3, 0x884590, 0x0, 0x0, 0xc0001f06a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000236640, 0x4, 0x4, 0x691120, 0xc000236600, 0x0, 0x0, 0xc00023e000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c40, 0x7ffc27cdde62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc27cdde62, 0xe2, 0x7fb21b5e9f01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffc27cdde62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffc1a6dfe62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc1a6dfe62, 0xe2, 0x7f929a36bf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc1a6dfe62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c8776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b6980, 0x1, 0x1, 0xc000214680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c87d0, 0x4, 0xc0001c87a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c8770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000214680, 0x4, 0x4, 0x691120, 0xc000214640, 0x0, 0x0, 0xc00021a000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00017dc80, 0x7ffc78b29e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc78b29e62, 0xe2, 0x7fb0167dff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffc78b29e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; type ts2(type ) struct {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
type ts2(type ) struct {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffc1ed55e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc1ed55e4f, 0xf5, 0x7f18379d3f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc1ed55e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; type ts2(type ) struct {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
type ts2(type ) struct {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffda2397e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffda2397e4f, 0xf5, 0x7f167a9e5f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffda2397e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; type ts2(type ) struct {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
type ts2(type ) struct {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fffab2d5e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffab2d5e4f, 0xf5, 0x7f98c7bdaf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fffab2d5e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; type ts2(type ) struct {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
type ts2(type ) struct {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffd84845e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd84845e4f, 0xf5, 0x7f57379e2f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffd84845e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; type ts2(type ) struct {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
type ts2(type ) struct {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e66a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001cc960, 0x1, 0x1, 0xc0002276d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e66d6, 0x4, 0xc0001e66d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e6676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002276d0, 0x5, 0x5, 0x691120, 0xc00022a640, 0x0, 0x0, 0xc000232000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c60, 0x7ffe0d5e9e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe0d5e9e4f, 0xf5, 0x7f6dc5b52f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7ffe0d5e9e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ti0(type ) interface {  }; type ts2(type ) struct {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ti0(type ) interface {

};
type ts2(type ) struct {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001e46a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001e46d6, 0x4, 0xc0001e46d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001e4676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffc7d763e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc7d763e4f, 0xf5, 0x7f4a75d53f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffc7d763e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc000210640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe95025e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe95025e4f, 0xf5, 0x7f7b16f14f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe95025e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff200efe4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff200efe4f, 0xf5, 0x7f87fe473f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff200efe4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc000202690, 0x3, 0x884590, 0x0, 0x0, 0xc0001e87c0, 0x1, 0x1, 0xc00023b6d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0002026c6, 0x4, 0xc0002026c0, 0x3, 0x884590, 0x0, 0x0, 0xc000202666, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023b6d0, 0x5, 0x5, 0x691120, 0xc000240600, 0x0, 0x0, 0xc000248000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00019dc40, 0x7ffdf372ee4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdf372ee4f, 0xf5, 0x4abd01, 0x4aa319)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffdf372ee4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae760, 0x3, 0x884590, 0x0, 0x0, 0xc00019c970, 0x1, 0x1, 0xc0001f7720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae796, 0x4, 0xc0001ae790, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f7720, 0x5, 0x5, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffc37af0e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc37af0e4f, 0xf5, 0x7f9f58702f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc37af0e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f06a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001cc960, 0x1, 0x1, 0xc0002276d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f06d6, 0x4, 0xc0001f06d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001f0676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002276d0, 0x5, 0x5, 0x691120, 0xc00022a640, 0x0, 0x0, 0xc000232000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c60, 0x7ffe5c742e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe5c742e4f, 0xf5, 0x7f17cbd11f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7ffe5c742e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts1(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts1(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ee6a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ee6d6, 0x4, 0xc0001ee6d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ee676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffda7435e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffda7435e4f, 0xf5, 0x7f1a26293f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffda7435e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffeb198be4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffeb198be4f, 0xf5, 0x7ff10fdc8f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffeb198be4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f8690, 0x3, 0x884590, 0x0, 0x0, 0xc0001de7c0, 0x1, 0x1, 0xc0002316d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f86c6, 0x4, 0xc0001f86c0, 0x3, 0x884590, 0x0, 0x0, 0xc0001f8666, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002316d0, 0x5, 0x5, 0x691120, 0xc000234600, 0x0, 0x0, 0xc00023e000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c40, 0x7fff0d1fee4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff0d1fee4f, 0xf5, 0x7f744d0c3f01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff0d1fee4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts1() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts1()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts1()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ee6a0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca960, 0x1, 0x1, 0xc0002256d0, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ee6d6, 0x4, 0xc0001ee6d0, 0x3, 0x884590, 0x0, 0x0, 0xc0001ee676, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0002256d0, 0x5, 0x5, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffe1cc09e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe1cc09e4f, 0xf5, 0x7f2f9a19cf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffe1cc09e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffcf574ee4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcf574ee4f, 0xf5, 0x7ff22c454f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffcf574ee4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdedbcae4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdedbcae4f, 0xf5, 0x7f17b13caf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdedbcae4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct {  }; type ts2(type ) struct { f0 ts0() }; func (this ts2(type )) m0(type )(x0 ti0()) ts2() { return ts2(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {

};
type ts2(type ) struct {
  f0 ts0()
};
func (this ts2(type )) m0(type )(x0 ti0()) ts2() {
  return ts2(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts2(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000212000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffe91a35e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffe91a35e4f, 0xf5, 0x7f7918e20f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffe91a35e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ac726, 0x3, 0x884590, 0x0, 0x0, 0xc00019a930, 0x1, 0x1, 0xc0001f84c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ac780, 0x4, 0xc0001ac756, 0x3, 0x884590, 0x0, 0x0, 0xc0001ac720, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f84c0, 0x4, 0x4, 0x691120, 0xc0001f8480, 0x0, 0x0, 0xc0001fe000, 0xce)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffc9aa23e6c, 0xd8, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc9aa23e6c, 0xd8, 0x7fdbcbefdf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc9aa23e6c, 0xd8, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c0726, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae930, 0x1, 0x1, 0xc00020c4c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c0780, 0x4, 0xc0001c0756, 0x3, 0x884590, 0x0, 0x0, 0xc0001c0720, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020c4c0, 0x4, 0x4, 0x691120, 0xc00020c480, 0x0, 0x0, 0xc000212000, 0xce)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdf1e81e6c, 0xd8, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdf1e81e6c, 0xd8, 0x7f8e8367af01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdf1e81e6c, 0xd8, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type a0 ti0())(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type a0 ti0())(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c0786, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae990, 0x1, 0x1, 0xc00020c5c0, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c07e0, 0x4, 0xc0001c07b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c0780, 0x2, 0xc000202e40, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020c5c0, 0x4, 0x4, 0x691120, 0xc00020c580, 0x0, 0x0, 0xc000212000, 0xd6)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffc2fed7e64, 0xe0, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc2fed7e64, 0xe0, 0x7f27ea709f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc2fed7e64, 0xe0, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type a0 ti0())(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type a0 ti0())(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001f86b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001de7e0, 0x1, 0x1, 0xc000234580, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001f8710, 0x4, 0xc0001f86e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001f86b0, 0x2, 0xc00022ade0, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000234580, 0x4, 0x4, 0x691120, 0xc000234540, 0x0, 0x0, 0xc00023e000, 0xd6)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000193c40, 0x7fff79182e64, 0xe0, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff79182e64, 0xe0, 0x7fc97af2cf01, 0xc000122a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff79182e64, 0xe0, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffecc114e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffecc114e62, 0xe2, 0x7fdfd2f2cf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffecc114e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ee6b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc000228640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ee710, 0x4, 0xc0001ee6e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ee6b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000228640, 0x4, 0x4, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffd7c460e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd7c460e62, 0xe2, 0x7fd3dff43f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffd7c460e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae776, 0x3, 0x884590, 0x0, 0x0, 0xc00019c980, 0x1, 0x1, 0xc0001fc680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae7d0, 0x4, 0xc0001ae7a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001fc680, 0x4, 0x4, 0x691120, 0xc0001fc640, 0x0, 0x0, 0xc000200000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffec5882e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffec5882e62, 0xe2, 0x7f3731caff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffec5882e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc000210680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000210680, 0x4, 0x4, 0x691120, 0xc000210640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fffe7194e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffe7194e62, 0xe2, 0x7f467de6df01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fffe7194e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ee6b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc000228640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ee710, 0x4, 0xc0001ee6e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ee6b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000228640, 0x4, 0x4, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7fffd13e5e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fffd13e5e62, 0xe2, 0x7f5ac1041f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fffd13e5e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts1(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ee6b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc000228640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ee710, 0x4, 0xc0001ee6e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ee6b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000228640, 0x4, 0x4, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7fff8875fe62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff8875fe62, 0xe2, 0x7f9cd185df01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff8875fe62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ts1()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0002026a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001e87d0, 0x1, 0x1, 0xc00023e600, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc000202700, 0x4, 0xc0002026d6, 0x3, 0x884590, 0x0, 0x0, 0xc0002026a0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00023e600, 0x4, 0x4, 0x691120, 0xc00023e5c0, 0x0, 0x0, 0xc000248000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc00019dc40, 0x7fff388c7e62, 0xe2, 0x7f0a52d91f01, 0xc0001248c0, 0x413bc8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x400, 0x7fff388c7e62, 0xe2, 0x7f0a52d91f01, 0xc000124a70)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff388c7e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ts0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ee6b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc000228640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ee710, 0x4, 0xc0001ee6e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ee6b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000228640, 0x4, 0x4, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffd93bfbe62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd93bfbe62, 0xe2, 0x7f29fca5ff01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7ffd93bfbe62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x1} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x1}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x1}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd85615e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd85615e62, 0xe2, 0x7f077f9a6f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd85615e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ts1(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2776, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0980, 0x1, 0x1, 0xc00020e680, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c27d0, 0x4, 0xc0001c27a6, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2770, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020e680, 0x4, 0x4, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffdeaefbe62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffdeaefbe62, 0xe2, 0x7fa2d915bf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffdeaefbe62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ts0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc000220270, 0x3, 0x884590, 0x0, 0x0, 0xc0001d08e0, 0x1, 0x1, 0xc00022a600, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0002202a6, 0x4, 0xc0002202a0, 0x3, 0x884590, 0x0, 0x0, 0xc000220246, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00022a600, 0x4, 0x4, 0x691120, 0xc00022a5c0, 0x0, 0x0, 0xc000232000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7ffef6e32e62, 0xe2, 0x7f4c1c840f01, 0xc0001248c0, 0x413bc8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffef6e32e62, 0xe2, 0x7f4c1c840f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000140000, 0x7ffef6e32e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
func (this ts0(type )) m0(type )(x1 ti0(), x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ee6b6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ca970, 0x1, 0x1, 0xc000228640, 0x4, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ee710, 0x4, 0xc0001ee6e6, 0x3, 0x884590, 0x0, 0x0, 0xc0001ee6b0, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc000228640, 0x4, 0x4, 0x691120, 0xc000228600, 0x0, 0x0, 0xc000230000, 0xd8)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000191c60, 0x7fff551c4e62, 0xe2, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff551c4e62, 0xe2, 0x7f17e8803f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000130000, 0x7fff551c4e62, 0xe2, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffeef6e1e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffeef6e1e4f, 0xf5, 0x7ff1c2a21f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffeef6e1e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts2(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts2(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffd39f0ae4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffd39f0ae4f, 0xf5, 0x7f02125ecf01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffd39f0ae4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffc014bae4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffc014bae4f, 0xf5, 0x7f00f792af01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffc014bae4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts0(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts0(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001ae760, 0x3, 0x884590, 0x0, 0x0, 0xc00019c970, 0x1, 0x1, 0xc0001f7720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001ae796, 0x4, 0xc0001ae790, 0x3, 0x884590, 0x0, 0x0, 0xc0001ae736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc0001f7720, 0x5, 0x5, 0x691120, 0xc0001fa640, 0x0, 0x0, 0xc000200000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000163ca0, 0x7ffed3a04e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffed3a04e4f, 0xf5, 0x7f1beb1e9f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7ffed3a04e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts2(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts2(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7ffcd4b35e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7ffcd4b35e4f, 0xf5, 0x7f9ef55d4f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc000100000, 0x7ffcd4b35e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


Command:
go run github.com/rhu1/fgg -test-monom '-eval=100' -inline 'package main; type ti0(type ) interface {  }; type ts0(type ) struct {  }; type ts1(type ) struct { f0 ts0() }; type ts2(type ) struct {  }; func (this ts1(type )) m0(type )(x0 ti0()) ts1() { return ts1(){x0} }; func main() { _ = ts0(){} }'
Source:
package main;
type ti0(type ) interface {

};
type ts0(type ) struct {

};
type ts1(type ) struct {
  f0 ts0()
};
type ts2(type ) struct {

};
func (this ts1(type )) m0(type )(x0 ti0()) ts1() {
  return ts1(){x0}
};
func main() {
  _ = ts0(){}
}
Output:

Errors:
panic: Arg expr must implement field type: arg=ti0(), field=ts0()
	ts1(){x0}

goroutine 1 [running]:
github.com/rhu1/fgg/fgg.StructLit.Typing(0xc0001c2760, 0x3, 0x884590, 0x0, 0x0, 0xc0001b0970, 0x1, 0x1, 0xc00020b720, 0x5, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_exprs.go:145 +0x82c
github.com/rhu1/fgg/fgg.MethDecl.Ok(0xc0001c2796, 0x4, 0xc0001c2790, 0x3, 0x884590, 0x0, 0x0, 0xc0001c2736, 0x2, 0x884590, ...)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:234 +0x9dd
github.com/rhu1/fgg/fgg.FGGProgram.Ok(0xc00020b720, 0x5, 0x5, 0x691120, 0xc00020e640, 0x0, 0x0, 0xc000214000, 0xe9)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/fgg/fgg_decls.go:53 +0x35b
main.parse(0x63d300, 0x68bc20, 0xc000177ca0, 0x7fff7a7c1e4f, 0xf5, 0x1, 0x0, 0x0)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:44 +0xd2
main.NewFGGInterp(0x40b100, 0x7fff7a7c1e4f, 0xf5, 0x7f62d50e7f01, 0x400)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/Frontend.go:153 +0x8e
main.testMonom(0xc0000f0000, 0x7fff7a7c1e4f, 0xf5, 0x64)
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:186 +0x61
main.main()
	/afs/inf.ed.ac.uk/user/s16/s1638847/go/src/github.com/rhu1/fgg/main.go:142 +0x318
exit status 2


541972.39user 1124661.10system 19:31:26elapsed 2371%CPU (0avgtext+0avgdata 365624maxresident)k
0inputs+7525163840outputs (431435major+21261241206minor)pagefaults 0swaps
